// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using projectef;

#nullable disable

namespace projectef.Migrations
{
    [DbContext(typeof(TasksContext))]
    [Migration("20220713065201_InitialData")]
    partial class InitialData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("projectef.Models.Category", b =>
                {
                    b.Property<Guid>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Importance")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("CategoryId");

                    b.ToTable("Category", (string)null);

                    b.HasData(
                        new
                        {
                            CategoryId = new Guid("5f617470-bf19-4be4-9fea-f26a18bf616a"),
                            Description = "This is a random category creating for testing the db",
                            Importance = 20,
                            Name = "Pending Activities"
                        },
                        new
                        {
                            CategoryId = new Guid("5f617470-bf20-4be4-9fea-f26a18bf616a"),
                            Description = "This is a random category creating for testing the db",
                            Importance = 50,
                            Name = "Studying the new formulas"
                        });
                });

            modelBuilder.Entity("projectef.Models.TodoTask", b =>
                {
                    b.Property<Guid>("TaskId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Completed")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("TaskId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Task", (string)null);

                    b.HasData(
                        new
                        {
                            TaskId = new Guid("b4c54026-ec34-439d-bb61-b3e4c1cb3399"),
                            CategoryId = new Guid("5f617470-bf19-4be4-9fea-f26a18bf616a"),
                            Completed = false,
                            CreatedAt = new DateTime(2022, 7, 13, 1, 52, 1, 440, DateTimeKind.Local).AddTicks(8325),
                            Description = "This is a random Task to do, this is just some random description",
                            Priority = 2,
                            Title = "Review the payment for the school."
                        },
                        new
                        {
                            TaskId = new Guid("b4c54026-ec34-439d-bb61-b3e4c1cb4499"),
                            CategoryId = new Guid("5f617470-bf20-4be4-9fea-f26a18bf616a"),
                            Completed = false,
                            CreatedAt = new DateTime(2022, 7, 13, 1, 52, 1, 440, DateTimeKind.Local).AddTicks(8367),
                            Description = "This is a random Task to do, this is just some random description",
                            Priority = 0,
                            Title = "Finish Stranger things Season 4"
                        });
                });

            modelBuilder.Entity("projectef.Models.TodoTask", b =>
                {
                    b.HasOne("projectef.Models.Category", "Category")
                        .WithMany("Tasks")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("projectef.Models.Category", b =>
                {
                    b.Navigation("Tasks");
                });
#pragma warning restore 612, 618
        }
    }
}
